package org.example;

import javax.swing.*;
import java.awt.*;

import org.jnativehook.GlobalScreen;
import org.jnativehook.NativeHookException;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;

import java.io.IOException;



public class A {

    private B bComponent;
    private C timerComponent;
    private GlobalEventListener globalEventListener;

    public A() {
        globalEventListener = new GlobalEventListener();
        timerComponent = new C(globalEventListener);
        bComponent = new B(timerComponent);

        startGlobalEventListener();

        startPeriodicLogging(); // Start logging counts

    }


    private void startGlobalEventListener() {
        Thread eventListenerThread = new Thread(() -> {
            try {
                GlobalEventListener listener = new GlobalEventListener();
                listener.openLogFilePublic();
                listener.startPeriodicLoggingPublic();

                try {
                    // Register the native hook
                    GlobalScreen.registerNativeHook();

                    // Add keyboard listener first
                    GlobalScreen.addNativeKeyListener(globalEventListener);
                    GlobalScreen.addNativeMouseMotionListener(globalEventListener);

                } catch (NativeHookException e) {
                    e.printStackTrace();
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        });

        eventListenerThread.start();
    }

    public void createAndShowGUI() {
        JFrame frame = new JFrame("Application");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(400, 300);
        frame.setLayout(new BorderLayout());

        frame.add(bComponent.getPanel(), BorderLayout.CENTER);

        frame.setVisible(true);
        timerComponent.startTimer();
    }

    private void startPeriodicLogging() {
        Timer timer = new Timer();
        timer.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                String timestamp = dateFormat.format(new Date());
                System.out.println(timestamp + ": " + globalEventListener.getCounts() + "\n");
            }
        }, 0, 15000);
    }
}

