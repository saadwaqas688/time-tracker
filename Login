package org.example;

import org.json.JSONObject;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileWriter;
import java.io.IOException;

public class Login extends JFrame {

    private static final Color SECONDARY_COLOR = new Color(0, 36, 51);
    private static final Color PRIMARY_COLOR = new Color(3, 50, 70);
    private static final Color PRIMARY_TEXT_COLOR = new Color(255, 255, 255);
    private static final Color WARNING_COLOR = new Color(244, 162, 97);

    private JTextField emailField;
    private JPasswordField passwordField;

    public Login() {
        setTitle("Login");
        setSize(400, 300);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        JPanel mainPanel = new JPanel(new GridBagLayout());
        mainPanel.setBackground(SECONDARY_COLOR);
        mainPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

        GridBagConstraints gbc = new GridBagConstraints();
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(10, 0, 10, 0);
        gbc.gridx = 0;

        // Email Field
        JLabel emailLabel = new JLabel("Email:");
        emailLabel.setForeground(PRIMARY_TEXT_COLOR);
        gbc.gridy = 0;
        mainPanel.add(emailLabel, gbc);

        emailField = new JTextField();
        emailField.setBackground(PRIMARY_COLOR);
        emailField.setForeground(PRIMARY_TEXT_COLOR);
        emailField.setPreferredSize(new Dimension(300, 30));
        gbc.gridy = 1;
        mainPanel.add(emailField, gbc);

        // Password Field
        JLabel passwordLabel = new JLabel("Password:");
        passwordLabel.setForeground(PRIMARY_TEXT_COLOR);
        gbc.gridy = 2;
        mainPanel.add(passwordLabel, gbc);

        passwordField = new JPasswordField();
        passwordField.setBackground(PRIMARY_COLOR);
        passwordField.setForeground(PRIMARY_TEXT_COLOR);
        passwordField.setPreferredSize(new Dimension(300, 30));
        gbc.gridy = 3;
        mainPanel.add(passwordField, gbc);

        // Login Button
        JButton loginButton = new JButton("Login");
        loginButton.setBackground(WARNING_COLOR);
        loginButton.setForeground(PRIMARY_TEXT_COLOR);
        loginButton.setOpaque(true);
        loginButton.setBorder(BorderFactory.createEmptyBorder());
        loginButton.setPreferredSize(new Dimension(100, 30));
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.CENTER;
        mainPanel.add(loginButton, gbc);

        loginButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                handleLogin();
            }
        });

        getContentPane().add(mainPanel);
    }

    private void handleLogin() {
        String email = emailField.getText().trim();
        String password = new String(passwordField.getPassword()).trim();

        if (email.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill out all fields.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String jsonPayload = String.format("{\"email\":\"%s\", \"password\":\"%s\"}", email, password);
        String apiUrl = "http://localhost:3000/login";
        JSONObject response = HttpUtil.sendPostRequest(apiUrl, jsonPayload);

        if (response != null && response.has("success") && response.getBoolean("success")) {
            saveUserDetails(response.getJSONObject("user"));
            JOptionPane.showMessageDialog(this, "Login successful.", "Success", JOptionPane.INFORMATION_MESSAGE);
            // Redirect to FolderList
            String selectedTaskId = "1";  // Replace with actual value
            String selectedProjectId = "2";
            boolean isDefaultSelectedTaskRunning=true;
            boolean isGlobalTimerRunning=true;
            FolderList folderList = new FolderList(selectedTaskId, selectedProjectId,isGlobalTimerRunning,isDefaultSelectedTaskRunning);
            folderList.setVisible(true);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Invalid email or password.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void saveUserDetails(JSONObject userDetails) {
        try (FileWriter file = new FileWriter("appData.json")) {
            file.write(userDetails.toString());
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            Login loginForm = new Login();
            loginForm.setVisible(true);
        });
    }
}
